name: Daily Flight Data Collection

on:
  schedule:
    # Run daily at midnight UTC
    - cron: '0 0 * * *'
  workflow_dispatch:  # Allow manual triggers
    inputs:
      hub:
        description: 'Specific hub to collect (e.g., KLAS)'
        required: false
        type: string

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      hubs: ${{ steps.set-hubs.outputs.hubs }}
    steps:
      - name: Set hubs to process
        id: set-hubs
        run: |
          if [ "${{ github.event.inputs.hub }}" != "" ]; then
            echo "hubs=[${{ github.event.inputs.hub }}]" >> $GITHUB_OUTPUT
          else
            # List of SWA hubs - keep each hub in its own job
            echo 'hubs=["KLAS", "KPHX", "KDFW", "KHOU", "KBWI", "KMCI", "KOAK", "KMDW", "KDEN"]' >> $GITHUB_OUTPUT
          fi

  collect:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hub: ${{fromJson(needs.prepare.outputs.hubs)}}
      # Allow other jobs to continue if one fails
      fail-fast: false
      # Limit concurrent jobs to avoid API rate limits
      max-parallel: 3
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for progress tracking
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Create .env file
        run: |
          echo "OPENSKY_USERNAME=${{ secrets.OPENSKY_USERNAME }}" >> .env
          echo "OPENSKY_PASSWORD=${{ secrets.OPENSKY_PASSWORD }}" >> .env
          echo "OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }}" >> .env
          echo "REQUEST_COOLDOWN=5" >> .env  # Increased cooldown for better rate limit handling
          echo "MAX_RETRIES=3" >> .env
          echo "ENVIRONMENT=production" >> .env
          echo "DEBUG=False" >> .env
          
      - name: Run data collection
        env:
          OPENSKY_USERNAME: ${{ secrets.OPENSKY_USERNAME }}
          OPENSKY_PASSWORD: ${{ secrets.OPENSKY_PASSWORD }}
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
          HUB: ${{ matrix.hub }}
          ENVIRONMENT: production
          DEBUG: false
        run: |
          # Create data directory if it doesn't exist
          mkdir -p data/historical
          
          # Run the collector for this hub
          # The collector_daemon will handle progress tracking and resuming
          python -c "
          from src.data_collection.collector_daemon import HistoricalDataCollector
          collector = HistoricalDataCollector()
          
          # Collect data for 2024
          collector.collect_2024_data('$HUB')
          "
          
      - name: Check for changes
        id: changes
        run: |
          git diff --quiet data/historical/ || echo "has_changes=true" >> $GITHUB_OUTPUT
          
      - name: Commit and push if changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Stage only JSON files for this hub
          git add "data/historical/${{ matrix.hub }}_*.json"
          
          git commit -m "Update flight data for ${{ matrix.hub }} [skip ci]"
          git push 